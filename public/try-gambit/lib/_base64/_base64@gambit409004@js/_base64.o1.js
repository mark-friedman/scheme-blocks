// File generated by Gambit v4.9.4
// Link info: (409004 (js ((compactness 9))) "_base64" (("_base64")) (module_register returnpt_init ctrlpt_init parententrypt_init stringp make_u8vector string base92_decode char bignum jsnumberp u8vector make_interned_symbol glo make_string poll cons make_interned_char r4 stack sp r2 r3 absent_obj r0 r1 wrong_nargs nargs) (##fifo->string ##fail-check-char ##error ##fail-check-exact-integer ##fifo->u8vector ##fail-check-string ##fail-check-u8vector ##raise-range-exception) (##u8vector->base64 u8vector->base64 ##base64->u8vector base64->u8vector _base64#) () #f)

_cst0____base64 = _make_interned_char(43);

_cst1____base64 = _make_interned_char(47);

_cst2____base64 = _make_interned_char(10);

_cst3____base64 = _i("##fifo->string");

_cst4____base64 = _make_interned_char(61);

_cst5____base64 = _X(1,_i("u8vector"));

_cst7____base64 = _i("##fail-check-u8vector");

_cst9____base64 = _i("start");

_cst8____base64 = _X(2,_cst9____base64);

_cst10____base64 = _X(2,_cst9____base64);

_cst11____base64 = _X(2,_cst9____base64);

_cst12____base64 = _i("##raise-range-exception");

_cst13____base64 = _i("##fail-check-exact-integer");

_cst15____base64 = _i("end");

_cst14____base64 = _X(3,_cst15____base64);

_cst16____base64 = _X(3,_cst15____base64);

_cst17____base64 = _X(3,_cst15____base64);

_cst19____base64 = _i("alt-char1");

_cst18____base64 = _X(4,_cst19____base64);

_cst20____base64 = _i("##fail-check-char");

_cst22____base64 = _i("alt-char2");

_cst21____base64 = _X(5,_cst22____base64);

_cst24____base64 = _i("width");

_cst23____base64 = _X(6,_cst24____base64);

_cst25____base64 = _X(6,_cst24____base64);

_cst26____base64 = _X(6,_cst24____base64);

_cst27____base64 = _make_interned_char(65);

_cst28____base64 = _make_interned_char(90);

_cst29____base64 = _make_interned_char(97);

_cst30____base64 = _i("##fifo->u8vector");

_cst31____base64 = _make_interned_char(122);

_cst32____base64 = _make_interned_char(48);

_cst33____base64 = new _ScmString(_z("cEcDcVcHYWCcGcHcFcRcGcLcQcJCcHcUcUcRcU"));

_cst34____base64 = _make_interned_char(57);

_cst35____base64 = _i("##error");

_cst36____base64 = _X(1,_i("string"));

_cst38____base64 = _i("##fail-check-string");

_cst39____base64 = _X(2,_cst9____base64);

_cst40____base64 = _X(2,_cst9____base64);

_cst41____base64 = _X(2,_cst9____base64);

_cst42____base64 = _X(3,_cst15____base64);

_cst43____base64 = _X(3,_cst15____base64);

_cst44____base64 = _X(3,_cst15____base64);

_cst45____base64 = _X(4,_cst19____base64);

_cst46____base64 = _X(5,_cst22____base64);

_m(_bb1___base64_23_ = () => {
if (_n !== 0) {
return _w(_bb1___base64_23_);
}
_a = void 0;
return _r;
},-1,_i("_base64#"),!1,!0);



_m(_bb1__23__23_u8vector_2d__3e_base64 = () => {
if (_n === 1) {
_s[++_t] = _a;
_s[++_t] = _absent_obj;
_s[++_t] = _absent_obj;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 2) {
_s[++_t] = _a;
_s[++_t] = _b;
_s[++_t] = _absent_obj;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 3) {
_s[++_t] = _a;
_s[++_t] = _b;
_s[++_t] = _c;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 4) {
_s[++_t] = _a;
_s[++_t] = _b;
_a = _c;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 5) {
_s[++_t] = _a;
_a = _b;
_b = _c;
_c = _absent_obj;
} else {
if (_n !== 6) {
return _w(_bb1__23__23_u8vector_2d__3e_base64);
}
}
}
}
}
}
if (_s[_t-1] === _absent_obj) {
return _bb2__23__23_u8vector_2d__3e_base64();
} else {
return _bb3__23__23_u8vector_2d__3e_base64();
}
},-1,_i("##u8vector->base64"),!1,!0);

_j(_bb2__23__23_u8vector_2d__3e_base64 = () => {
_d = 0;
if (_s[_t] === _absent_obj) {
return _bb4__23__23_u8vector_2d__3e_base64();
} else {
return _bb66__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb3__23__23_u8vector_2d__3e_base64 = () => {
_d = _s[_t-1];
if (_s[_t] === _absent_obj) {
return _bb4__23__23_u8vector_2d__3e_base64();
} else {
return _bb66__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb4__23__23_u8vector_2d__3e_base64 = () => {
_s[_t-1] = _s[_t-2].a.length;
_s[_t] = _a;
_a = _s[_t-1];
_s[_t-1] = _s[_t];
if (_s[_t-1] === _absent_obj) {
return _bb5__23__23_u8vector_2d__3e_base64();
} else {
return _bb67__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb66__23__23_u8vector_2d__3e_base64 = () => {
_s[_t-1] = _a;
_a = _s[_t];
if (_s[_t-1] === _absent_obj) {
return _bb5__23__23_u8vector_2d__3e_base64();
} else {
return _bb67__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb5__23__23_u8vector_2d__3e_base64 = () => {
_s[_t-1] = _a;
_a = _cst0____base64;
if (_b === _absent_obj) {
return _bb6__23__23_u8vector_2d__3e_base64();
} else {
return _bb68__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb67__23__23_u8vector_2d__3e_base64 = () => {
_s[_t] = _a;
_a = _s[_t-1];
_s[_t-1] = _s[_t];
if (_b === _absent_obj) {
return _bb6__23__23_u8vector_2d__3e_base64();
} else {
return _bb68__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb6__23__23_u8vector_2d__3e_base64 = () => {
_b = _cst1____base64;
if (_c === _absent_obj) {
return _bb7__23__23_u8vector_2d__3e_base64();
} else {
return _bb8__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb68__23__23_u8vector_2d__3e_base64 = () => {
if (_c === _absent_obj) {
return _bb7__23__23_u8vector_2d__3e_base64();
} else {
return _bb8__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb7__23__23_u8vector_2d__3e_base64 = () => {
_c = 0;
return _bb8__23__23_u8vector_2d__3e_base64();
});

_j(_bb8__23__23_u8vector_2d__3e_base64 = () => {
_s[_t] = _X(null,null);
_s[_t].a = _s[_t];
_s[_t] = [0,_s[_t]];
_s[_t+1] = _s[_t];
_s[_t] = _a;
_s[_t+2] = _s[_t+1];
_s[_t+1] = _b;
_s[_t+3] = _s[_t+2];
_s[_t+2] = _c;
if (_c > 0) {
_t += 3;
return _bb9__23__23_u8vector_2d__3e_base64();
} else {
_t += 3;
return _bb65__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb9__23__23_u8vector_2d__3e_base64 = () => {
_b = _d;
_a = _s[_t];
--_t;
return _p(_bb10__23__23_u8vector_2d__3e_base64);
});

_j(_bb65__23__23_u8vector_2d__3e_base64 = () => {
_c = -1;
return _bb9__23__23_u8vector_2d__3e_base64();
});

_j(_bb10__23__23_u8vector_2d__3e_base64 = () => {
_d = _b + 3;
if (_d <= _s[_t-3]) {
return _bb11__23__23_u8vector_2d__3e_base64();
} else {
return _bb50__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb11__23__23_u8vector_2d__3e_base64 = () => {
_d = _s[_t-4].a[_b];
_s[_t+1] = _b + 1;
_s[_t+1] = _s[_t-4].a[_s[_t+1]];
_s[_t+2] = _b + 2;
_s[_t+2] = _s[_t-4].a[_s[_t+2]];
_s[_t+3] = _d >> 2;
_s[_t+4] = _s[_t+1] >> 4;
_d = _d << 4;
_d = _d + _s[_t+4];
_d = 63 & _d;
_s[_t+4] = _s[_t+2] >> 6;
_s[_t+1] = _s[_t+1] << 2;
_s[_t+1] = _s[_t+1] + _s[_t+4];
_s[_t+1] = 63 & _s[_t+1];
_s[_t+2] = 63 & _s[_t+2];
_s[_t+4] = _r;
_s[_t+5] = _a;
_s[_t+6] = _b;
_s[_t+7] = _s[_t-2];
_s[_t+8] = _s[_t-1];
_s[_t+9] = _s[_t];
_s[_t+10] = _s[_t-2];
_s[_t+11] = _s[_t-1];
_s[_t+12] = _s[_t];
_s[_t+13] = _s[_t-2];
_s[_t+14] = _s[_t-1];
_s[_t+15] = _s[_t];
_s[_t+16] = _d;
_s[_t+17] = _s[_t-2];
_s[_t+18] = _s[_t-1];
_s[_t+19] = _s[_t];
_b = _s[_t+3];
_r = _bb43__23__23_u8vector_2d__3e_base64;
_t += 19;
return _p(_bb12__23__23_u8vector_2d__3e_base64);
});

_j(_bb50__23__23_u8vector_2d__3e_base64 = () => {
_d = _s[_t-3] - _b;
if (_d === 2) {
return _bb51__23__23_u8vector_2d__3e_base64();
} else {
return _bb58__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb12__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb43__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_b = _s[_t];
_a = _s[_t-11];
_r = _bb45__23__23_u8vector_2d__3e_base64;
--_t;
return _bb44__23__23_u8vector_2d__3e_base64();
},21,9);

_j(_bb51__23__23_u8vector_2d__3e_base64 = () => {
_d = _s[_t-4].a[_b];
_b = _b + 1;
_b = _s[_t-4].a[_b];
_s[_t-4] = _d >> 2;
_s[_t-3] = _b >> 4;
_d = _d << 4;
_d = _d + _s[_t-3];
_d = 63 & _d;
_b = _b << 2;
_b = 63 & _b;
_s[_t-3] = _r;
_s[_t+1] = _a;
_s[_t+2] = _s[_t-2];
_s[_t+3] = _s[_t-1];
_s[_t+4] = _s[_t];
_s[_t+5] = _s[_t-2];
_s[_t+6] = _s[_t-1];
_s[_t+7] = _s[_t];
_s[_t+8] = _b;
_s[_t+9] = _s[_t-2];
_s[_t+10] = _s[_t-1];
_s[_t+11] = _s[_t];
_s[_t+12] = _d;
_s[_t+13] = _s[_t-2];
_s[_t+14] = _s[_t-1];
_s[_t+15] = _s[_t];
_b = _s[_t-4];
_r = _bb52__23__23_u8vector_2d__3e_base64;
_t += 15;
return _p(_bb12__23__23_u8vector_2d__3e_base64);
});

_j(_bb58__23__23_u8vector_2d__3e_base64 = () => {
if (_d === 1) {
return _bb59__23__23_u8vector_2d__3e_base64();
} else {
return _bb64__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb13__23__23_u8vector_2d__3e_base64 = () => {
if (_b <= 25) {
return _bb14__23__23_u8vector_2d__3e_base64();
} else {
return _bb25__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb21__23__23_u8vector_2d__3e_base64 = () => {
if (0 === _c) {
return _bb22__23__23_u8vector_2d__3e_base64();
} else {
return _bb41__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb44__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb45__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_b = _s[_t-11];
_a = _s[_t-7];
_r = _bb47__23__23_u8vector_2d__3e_base64;
return _bb46__23__23_u8vector_2d__3e_base64();
},17,9);

_k(_bb52__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_b = _s[_t];
_a = _s[_t-11];
_r = _bb54__23__23_u8vector_2d__3e_base64;
--_t;
return _bb53__23__23_u8vector_2d__3e_base64();
},17,2);

_j(_bb59__23__23_u8vector_2d__3e_base64 = () => {
_b = _s[_t-4].a[_b];
_d = _b >> 2;
_b = _b << 4;
_b = 63 & _b;
_s[_t-4] = _r;
_s[_t-3] = _a;
_s[_t+1] = _s[_t-2];
_s[_t+2] = _s[_t-1];
_s[_t+3] = _s[_t];
_s[_t+4] = _s[_t-2];
_s[_t+5] = _s[_t-1];
_s[_t+6] = _s[_t];
_s[_t+7] = _b;
_s[_t+8] = _s[_t-2];
_s[_t+9] = _s[_t-1];
_s[_t+10] = _s[_t];
_b = _d;
_r = _bb60__23__23_u8vector_2d__3e_base64;
_t += 10;
return _p(_bb12__23__23_u8vector_2d__3e_base64);
});

_j(_bb64__23__23_u8vector_2d__3e_base64 = () => {
_t -= 3;
return _bb36__23__23_u8vector_2d__3e_base64();
});

_j(_bb14__23__23_u8vector_2d__3e_base64 = () => {
_b = _b + 65;
_b = _make_interned_char(_b);
return _bb15__23__23_u8vector_2d__3e_base64();
});

_j(_bb25__23__23_u8vector_2d__3e_base64 = () => {
if (_b <= 51) {
return _bb26__23__23_u8vector_2d__3e_base64();
} else {
return _bb27__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb22__23__23_u8vector_2d__3e_base64 = () => {
_c = _a[0];
_d = _c + 1;
_a[0] = _d;
_d = _a[1];
_c = _c & 63;
if (_c === 0) {
return _bb42__23__23_u8vector_2d__3e_base64();
} else {
return _bb23__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb41__23__23_u8vector_2d__3e_base64 = () => {
_c = _c - 1;
if (_b <= 25) {
return _bb14__23__23_u8vector_2d__3e_base64();
} else {
return _bb25__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb46__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb47__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_b = _s[_t-7];
_a = _s[_t-4];
_r = _bb49__23__23_u8vector_2d__3e_base64;
return _bb48__23__23_u8vector_2d__3e_base64();
},14,9);

_j(_bb53__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb54__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_b = _s[_t];
_a = _s[_t-7];
_r = _bb56__23__23_u8vector_2d__3e_base64;
--_t;
return _bb55__23__23_u8vector_2d__3e_base64();
},13,2);

_k(_bb60__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_b = _s[_t];
_a = _s[_t-10];
_r = _bb62__23__23_u8vector_2d__3e_base64;
--_t;
return _bb61__23__23_u8vector_2d__3e_base64();
},12,1);

_j(_bb36__23__23_u8vector_2d__3e_base64 = () => {
_b = _a[1];
_a = _a[0];
if (0 < _a) {
return _bb37__23__23_u8vector_2d__3e_base64();
} else {
return _bb38__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb15__23__23_u8vector_2d__3e_base64 = () => {
_d = _a[0];
_s[_t-2] = _d + 1;
_a[0] = _s[_t-2];
_a = _a[1];
_d = _d & 63;
if (_d === 0) {
return _bb16__23__23_u8vector_2d__3e_base64();
} else {
return _bb18__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb26__23__23_u8vector_2d__3e_base64 = () => {
_b = _b - 26;
_b = _b + 97;
_b = _make_interned_char(_b);
return _bb15__23__23_u8vector_2d__3e_base64();
});

_j(_bb27__23__23_u8vector_2d__3e_base64 = () => {
if (_b <= 61) {
return _bb28__23__23_u8vector_2d__3e_base64();
} else {
return _bb29__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb42__23__23_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _make_string(64,0);
_s[_t+2] = _X(_s[_t+1],null);
_s[_t+3] = _d.a;
_s[_t+3].b = _s[_t+2];
_d.a = _s[_t+2];
_d = _s[_t+1];
return _bb24__23__23_u8vector_2d__3e_base64();
});

_j(_bb23__23__23_u8vector_2d__3e_base64 = () => {
_d = _d.a;
_d = _d.a;
return _bb24__23__23_u8vector_2d__3e_base64();
});

_j(_bb48__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb49__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_b = _s[_t] + 3;
_a = _s[_t-1];
_r = _s[_t-2];
_t -= 6;
return _p(_bb10__23__23_u8vector_2d__3e_base64);
},11,9);

_j(_bb55__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb56__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_a = _s[_t-3];
_b = 64;
_r = _bb35__23__23_u8vector_2d__3e_base64;
return _bb57__23__23_u8vector_2d__3e_base64();
},9,2);

_j(_bb61__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb62__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_a = _s[_t-6];
_b = 64;
_r = _bb19__23__23_u8vector_2d__3e_base64;
return _bb63__23__23_u8vector_2d__3e_base64();
},8,1);

_j(_bb37__23__23_u8vector_2d__3e_base64 = () => {
if (_a <= 64) {
return _bb40__23__23_u8vector_2d__3e_base64();
} else {
return _bb38__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb38__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_a = _b;
_b = 0;
return _p(_bb39__23__23_u8vector_2d__3e_base64);
});

_j(_bb16__23__23_u8vector_2d__3e_base64 = () => {
_s[_t-2] = _make_string(64,0);
_s[_t-1] = _X(_s[_t-2],null);
_s[_t] = _a.a;
_s[_t].b = _s[_t-1];
_a.a = _s[_t-1];
_a = _s[_t-2];
return _bb17__23__23_u8vector_2d__3e_base64();
});

_j(_bb18__23__23_u8vector_2d__3e_base64 = () => {
_a = _a.a;
_a = _a.a;
return _bb17__23__23_u8vector_2d__3e_base64();
});

_j(_bb28__23__23_u8vector_2d__3e_base64 = () => {
_b = _b - 52;
_b = _b + 48;
_b = _make_interned_char(_b);
return _bb15__23__23_u8vector_2d__3e_base64();
});

_j(_bb29__23__23_u8vector_2d__3e_base64 = () => {
if (_b === 62) {
return _bb30__23__23_u8vector_2d__3e_base64();
} else {
return _bb31__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb24__23__23_u8vector_2d__3e_base64 = () => {
_d.a[_c] = 10;
_c = _s[_t] - 1;
if (_b <= 25) {
return _bb14__23__23_u8vector_2d__3e_base64();
} else {
return _bb25__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb57__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb35__23__23_u8vector_2d__3e_base64 = () => {
_a = _s[_t];
_r = _s[_t-4];
_t -= 4;
return _bb36__23__23_u8vector_2d__3e_base64();
},6,2);

_j(_bb63__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb19__23__23_u8vector_2d__3e_base64 = () => {
_c = _a;
_a = _s[_t-3];
_b = 64;
_r = _bb34__23__23_u8vector_2d__3e_base64;
return _bb20__23__23_u8vector_2d__3e_base64();
},5,1);

_j(_bb40__23__23_u8vector_2d__3e_base64 = () => {
_b = _b.a;
_b = _b.a;
_b.a.length = _a;
_a = _b;
_t -= 2;
return _r;
});

_j(_bb39__23__23_u8vector_2d__3e_base64 = () => {
_n = 3;
_t -= 2;
return _g["##fifo->string"]();
});

_j(_bb17__23__23_u8vector_2d__3e_base64 = () => {
_a.a[_d] = _b.a;
_a = _c;
_t -= 3;
return _r;
});

_j(_bb30__23__23_u8vector_2d__3e_base64 = () => {
_b = _s[_t-2];
return _bb15__23__23_u8vector_2d__3e_base64();
});

_j(_bb31__23__23_u8vector_2d__3e_base64 = () => {
if (_b === 63) {
return _bb32__23__23_u8vector_2d__3e_base64();
} else {
return _bb33__23__23_u8vector_2d__3e_base64();
}
});

_j(_bb20__23__23_u8vector_2d__3e_base64 = () => {
if (-1 === _c) {
return _bb13__23__23_u8vector_2d__3e_base64();
} else {
return _bb21__23__23_u8vector_2d__3e_base64();
}
});

_k(_bb34__23__23_u8vector_2d__3e_base64 = () => {
_a = _s[_t];
_r = _s[_t-1];
return _bb36__23__23_u8vector_2d__3e_base64();
},2,1);

_j(_bb32__23__23_u8vector_2d__3e_base64 = () => {
_b = _s[_t-1];
return _bb15__23__23_u8vector_2d__3e_base64();
});

_j(_bb33__23__23_u8vector_2d__3e_base64 = () => {
_b = _cst4____base64;
return _bb15__23__23_u8vector_2d__3e_base64();
});



_m(_bb1_u8vector_2d__3e_base64 = () => {
if (_n === 1) {
_s[++_t] = _a;
_s[++_t] = _absent_obj;
_s[++_t] = _absent_obj;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 2) {
_s[++_t] = _a;
_s[++_t] = _b;
_s[++_t] = _absent_obj;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 3) {
_s[++_t] = _a;
_s[++_t] = _b;
_s[++_t] = _c;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 4) {
_s[++_t] = _a;
_s[++_t] = _b;
_a = _c;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 5) {
_s[++_t] = _a;
_a = _b;
_b = _c;
_c = _absent_obj;
} else {
if (_n !== 6) {
return _w(_bb1_u8vector_2d__3e_base64);
}
}
}
}
}
}
if (_s[_t-2] instanceof _U8Vector) {
return _bb2_u8vector_2d__3e_base64();
} else {
return _bb40_u8vector_2d__3e_base64();
}
},-1,_i("u8vector->base64"),!1,!0);

_j(_bb2_u8vector_2d__3e_base64 = () => {
if (_s[_t-1] === _absent_obj) {
return _bb3_u8vector_2d__3e_base64();
} else {
return _bb4_u8vector_2d__3e_base64();
}
});

_j(_bb40_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _s[_t-2];
_s[_t-2] = _cst5____base64;
_s[_t+2] = _s[_t-1];
_s[_t-1] = _bb1_u8vector_2d__3e_base64;
_s[_t+3] = _s[_t];
_s[_t] = _s[_t+1];
_s[_t+1] = _s[_t+2];
_s[_t+2] = _s[_t+3];
_t += 3;
return _p(_bb41_u8vector_2d__3e_base64);
});

_j(_bb3_u8vector_2d__3e_base64 = () => {
_d = 0;
if (_y(_d)) {
return _bb5_u8vector_2d__3e_base64();
} else {
return _bb35_u8vector_2d__3e_base64();
}
});

_j(_bb4_u8vector_2d__3e_base64 = () => {
_d = _s[_t-1];
if (_y(_d)) {
return _bb5_u8vector_2d__3e_base64();
} else {
return _bb35_u8vector_2d__3e_base64();
}
});

_j(_bb41_u8vector_2d__3e_base64 = () => {
_n = 8;
--_t;
return _g["##fail-check-u8vector"]();
});

_j(_bb5_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _s[_t-2].a.length;
if ((0 <= _d) && _d <= _s[_t+1]) {
++_t;
return _bb6_u8vector_2d__3e_base64();
} else {
++_t;
return _bb34_u8vector_2d__3e_base64();
}
});

_j(_bb35_u8vector_2d__3e_base64 = () => {
if (_d instanceof _Bignum) {
return _bb36_u8vector_2d__3e_base64();
} else {
return _bb38_u8vector_2d__3e_base64();
}
});

_j(_bb6_u8vector_2d__3e_base64 = () => {
if (_s[_t-1] === _absent_obj) {
return _bb7_u8vector_2d__3e_base64();
} else {
return _bb23_u8vector_2d__3e_base64();
}
});

_j(_bb34_u8vector_2d__3e_base64 = () => {
_s[_t] = _s[_t-3];
_s[_t-3] = _cst8____base64;
_s[_t+1] = _s[_t-2];
_s[_t-2] = _bb1_u8vector_2d__3e_base64;
_s[_t+2] = _s[_t-1];
_s[_t-1] = _s[_t];
_s[_t] = _s[_t+1];
_s[_t+1] = _s[_t+2];
_t += 2;
return _p(_bb37_u8vector_2d__3e_base64);
});

_j(_bb36_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _s[_t-2];
_s[_t-2] = _cst10____base64;
_s[_t+2] = _s[_t-1];
_s[_t-1] = _bb1_u8vector_2d__3e_base64;
_s[_t+3] = _s[_t];
_s[_t] = _s[_t+1];
_s[_t+1] = _s[_t+2];
_s[_t+2] = _s[_t+3];
_t += 3;
return _p(_bb37_u8vector_2d__3e_base64);
});

_j(_bb38_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _s[_t-2];
_s[_t-2] = _cst11____base64;
_s[_t+2] = _s[_t-1];
_s[_t-1] = _bb1_u8vector_2d__3e_base64;
_s[_t+3] = _s[_t];
_s[_t] = _s[_t+1];
_s[_t+1] = _s[_t+2];
_s[_t+2] = _s[_t+3];
_t += 3;
return _p(_bb39_u8vector_2d__3e_base64);
});

_j(_bb7_u8vector_2d__3e_base64 = () => {
_s[_t] = _s[_t-3].a.length;
_s[_t+1] = _a;
_a = _s[_t];
_s[_t] = _s[_t+1];
if (_y(_a)) {
return _bb8_u8vector_2d__3e_base64();
} else {
return _bb24_u8vector_2d__3e_base64();
}
});

_j(_bb23_u8vector_2d__3e_base64 = () => {
_s[_t] = _a;
_a = _s[_t-1];
if (_y(_a)) {
return _bb8_u8vector_2d__3e_base64();
} else {
return _bb24_u8vector_2d__3e_base64();
}
});

_j(_bb37_u8vector_2d__3e_base64 = () => {
_n = 8;
--_t;
return _g["##raise-range-exception"]();
});

_j(_bb39_u8vector_2d__3e_base64 = () => {
_n = 8;
--_t;
return _g["##fail-check-exact-integer"]();
});

_j(_bb8_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _s[_t-3].a.length;
if ((_d <= _a) && _a <= _s[_t+1]) {
++_t;
return _bb9_u8vector_2d__3e_base64();
} else {
++_t;
return _bb33_u8vector_2d__3e_base64();
}
});

_j(_bb24_u8vector_2d__3e_base64 = () => {
if (_a instanceof _Bignum) {
return _bb27_u8vector_2d__3e_base64();
} else {
return _bb25_u8vector_2d__3e_base64();
}
});

_j(_bb9_u8vector_2d__3e_base64 = () => {
if (_s[_t-1] === _absent_obj) {
return _bb10_u8vector_2d__3e_base64();
} else {
return _bb31_u8vector_2d__3e_base64();
}
});

_j(_bb33_u8vector_2d__3e_base64 = () => {
_s[_t] = _s[_t-4];
_s[_t-4] = _cst14____base64;
_s[_t+1] = _s[_t-3];
_s[_t-3] = _bb1_u8vector_2d__3e_base64;
_s[_t+2] = _s[_t-2];
_s[_t-2] = _s[_t];
_s[_t] = _s[_t-1];
_s[_t-1] = _s[_t+1];
_s[_t+1] = _s[_t];
_s[_t] = _s[_t+2];
_a = _s[_t+1];
_t += 2;
return _p(_bb17_u8vector_2d__3e_base64);
});

_j(_bb27_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _s[_t-3];
_s[_t-3] = _cst16____base64;
_s[_t+2] = _s[_t-2];
_s[_t-2] = _bb1_u8vector_2d__3e_base64;
_s[_t+3] = _s[_t-1];
_s[_t-1] = _s[_t+1];
_s[_t+1] = _s[_t];
_s[_t] = _s[_t+2];
_s[_t+2] = _s[_t+1];
_s[_t+1] = _s[_t+3];
_a = _s[_t+2];
_t += 3;
return _p(_bb17_u8vector_2d__3e_base64);
});

_j(_bb25_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _s[_t-3];
_s[_t-3] = _cst17____base64;
_s[_t+2] = _s[_t-2];
_s[_t-2] = _bb1_u8vector_2d__3e_base64;
_s[_t+3] = _s[_t-1];
_s[_t-1] = _s[_t+1];
_s[_t+1] = _s[_t];
_s[_t] = _s[_t+2];
_s[_t+2] = _s[_t+1];
_s[_t+1] = _s[_t+3];
_a = _s[_t+2];
_t += 3;
return _p(_bb26_u8vector_2d__3e_base64);
});

_j(_bb10_u8vector_2d__3e_base64 = () => {
_s[_t] = _a;
_a = _cst0____base64;
if (_a instanceof _Char) {
return _bb11_u8vector_2d__3e_base64();
} else {
return _bb32_u8vector_2d__3e_base64();
}
});

_j(_bb31_u8vector_2d__3e_base64 = () => {
_s[_t] = _a;
_a = _s[_t-1];
if (_a instanceof _Char) {
return _bb11_u8vector_2d__3e_base64();
} else {
return _bb32_u8vector_2d__3e_base64();
}
});

_j(_bb17_u8vector_2d__3e_base64 = () => {
_n = 8;
_t -= 2;
return _g["##raise-range-exception"]();
});

_j(_bb26_u8vector_2d__3e_base64 = () => {
_n = 8;
_t -= 2;
return _g["##fail-check-exact-integer"]();
});

_j(_bb11_u8vector_2d__3e_base64 = () => {
if (_b === _absent_obj) {
return _bb12_u8vector_2d__3e_base64();
} else {
return _bb28_u8vector_2d__3e_base64();
}
});

_j(_bb32_u8vector_2d__3e_base64 = () => {
_s[_t] = _s[_t-4];
_s[_t-4] = _cst18____base64;
_s[_t+1] = _s[_t-3];
_s[_t-3] = _bb1_u8vector_2d__3e_base64;
_s[_t+2] = _s[_t-2];
_s[_t-2] = _s[_t];
_s[_t] = _s[_t-1];
_s[_t-1] = _s[_t+1];
_s[_t+1] = _s[_t];
_s[_t] = _s[_t+2];
_a = _s[_t+1];
_t += 2;
return _p(_bb30_u8vector_2d__3e_base64);
});

_j(_bb12_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _a;
_a = _cst1____base64;
if (_a instanceof _Char) {
++_t;
return _bb13_u8vector_2d__3e_base64();
} else {
++_t;
return _bb29_u8vector_2d__3e_base64();
}
});

_j(_bb28_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _a;
_a = _b;
if (_a instanceof _Char) {
++_t;
return _bb13_u8vector_2d__3e_base64();
} else {
++_t;
return _bb29_u8vector_2d__3e_base64();
}
});

_j(_bb30_u8vector_2d__3e_base64 = () => {
_n = 8;
_t -= 2;
return _g["##fail-check-char"]();
});

_j(_bb13_u8vector_2d__3e_base64 = () => {
if (_c === _absent_obj) {
return _bb14_u8vector_2d__3e_base64();
} else {
return _bb19_u8vector_2d__3e_base64();
}
});

_j(_bb29_u8vector_2d__3e_base64 = () => {
_s[_t-1] = _s[_t-5];
_s[_t-5] = _cst21____base64;
_s[_t] = _s[_t-4];
_s[_t-4] = _bb1_u8vector_2d__3e_base64;
_s[_t+1] = _s[_t-3];
_s[_t-3] = _s[_t-1];
_s[_t-1] = _s[_t-2];
_s[_t-2] = _s[_t];
_s[_t] = _s[_t-1];
_s[_t-1] = _s[_t+1];
_a = _s[_t];
++_t;
return _p(_bb30_u8vector_2d__3e_base64);
});

_j(_bb14_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _a;
_a = 0;
if (_y(_a)) {
++_t;
return _bb15_u8vector_2d__3e_base64();
} else {
++_t;
return _bb20_u8vector_2d__3e_base64();
}
});

_j(_bb19_u8vector_2d__3e_base64 = () => {
_s[_t+1] = _a;
_a = _c;
if (_y(_a)) {
++_t;
return _bb15_u8vector_2d__3e_base64();
} else {
++_t;
return _bb20_u8vector_2d__3e_base64();
}
});

_j(_bb15_u8vector_2d__3e_base64 = () => {
if (_a < 0) {
return _bb16_u8vector_2d__3e_base64();
} else {
return _bb18_u8vector_2d__3e_base64();
}
});

_j(_bb20_u8vector_2d__3e_base64 = () => {
if (_a instanceof _Bignum) {
return _bb21_u8vector_2d__3e_base64();
} else {
return _bb22_u8vector_2d__3e_base64();
}
});

_j(_bb16_u8vector_2d__3e_base64 = () => {
_s[_t-2] = _s[_t-6];
_s[_t-6] = _cst23____base64;
_s[_t-1] = _s[_t-5];
_s[_t-5] = _bb1_u8vector_2d__3e_base64;
_s[_t] = _s[_t-4];
_s[_t-4] = _s[_t-2];
_s[_t-2] = _s[_t-3];
_s[_t-3] = _s[_t-1];
_s[_t-1] = _s[_t-2];
_s[_t-2] = _s[_t];
_a = _s[_t-1];
return _p(_bb17_u8vector_2d__3e_base64);
});

_j(_bb18_u8vector_2d__3e_base64 = () => {
_s[_t-5] = _d;
_s[_t-4] = _s[_t-2];
_c = _a;
_b = _s[_t];
_a = _s[_t-1];
_n = 6;
_t -= 4;
return _p(_bb1__23__23_u8vector_2d__3e_base64);
});

_j(_bb21_u8vector_2d__3e_base64 = () => {
_s[_t-2] = _s[_t-6];
_s[_t-6] = _cst25____base64;
_s[_t-1] = _s[_t-5];
_s[_t-5] = _bb1_u8vector_2d__3e_base64;
_s[_t] = _s[_t-4];
_s[_t-4] = _s[_t-2];
_s[_t-2] = _s[_t-3];
_s[_t-3] = _s[_t-1];
_s[_t-1] = _s[_t-2];
_s[_t-2] = _s[_t];
_a = _s[_t-1];
return _p(_bb17_u8vector_2d__3e_base64);
});

_j(_bb22_u8vector_2d__3e_base64 = () => {
_s[_t-2] = _s[_t-6];
_s[_t-6] = _cst26____base64;
_s[_t-1] = _s[_t-5];
_s[_t-5] = _bb1_u8vector_2d__3e_base64;
_s[_t] = _s[_t-4];
_s[_t-4] = _s[_t-2];
_s[_t-2] = _s[_t-3];
_s[_t-3] = _s[_t-1];
_s[_t-1] = _s[_t-2];
_s[_t-2] = _s[_t];
_a = _s[_t-1];
return _p(_bb26_u8vector_2d__3e_base64);
});



_m(_bb1__23__23_base64_2d__3e_u8vector = () => {
if (_n === 1) {
_s[++_t] = _a;
_s[++_t] = _absent_obj;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 2) {
_s[++_t] = _a;
_s[++_t] = _b;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 3) {
_s[++_t] = _a;
_s[++_t] = _b;
_a = _c;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 4) {
_s[++_t] = _a;
_a = _b;
_b = _c;
_c = _absent_obj;
} else {
if (_n !== 5) {
return _w(_bb1__23__23_base64_2d__3e_u8vector);
}
}
}
}
}
if (_s[_t] === _absent_obj) {
return _bb2__23__23_base64_2d__3e_u8vector();
} else {
return _bb3__23__23_base64_2d__3e_u8vector();
}
},-1,_i("##base64->u8vector"),!1,!0);

_j(_bb2__23__23_base64_2d__3e_u8vector = () => {
_d = 0;
if (_a === _absent_obj) {
return _bb4__23__23_base64_2d__3e_u8vector();
} else {
return _bb81__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb3__23__23_base64_2d__3e_u8vector = () => {
_d = _s[_t];
if (_a === _absent_obj) {
return _bb4__23__23_base64_2d__3e_u8vector();
} else {
return _bb81__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb4__23__23_base64_2d__3e_u8vector = () => {
_a = _s[_t-1].a.length;
if (_b === _absent_obj) {
return _bb5__23__23_base64_2d__3e_u8vector();
} else {
return _bb82__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb81__23__23_base64_2d__3e_u8vector = () => {
if (_b === _absent_obj) {
return _bb5__23__23_base64_2d__3e_u8vector();
} else {
return _bb82__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb5__23__23_base64_2d__3e_u8vector = () => {
_b = _cst0____base64;
if (_c === _absent_obj) {
return _bb6__23__23_base64_2d__3e_u8vector();
} else {
return _bb7__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb82__23__23_base64_2d__3e_u8vector = () => {
if (_c === _absent_obj) {
return _bb6__23__23_base64_2d__3e_u8vector();
} else {
return _bb7__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb6__23__23_base64_2d__3e_u8vector = () => {
_c = _cst1____base64;
return _bb7__23__23_base64_2d__3e_u8vector();
});

_j(_bb7__23__23_base64_2d__3e_u8vector = () => {
_s[_t] = _X(null,null);
_s[_t].a = _s[_t];
_s[_t] = [0,_s[_t]];
_s[_t+1] = _s[_t];
_s[_t] = _a;
_s[_t+2] = _s[_t+1];
_s[_t+1] = _b;
_s[_t+3] = _c;
_c = _d;
_b = _s[_t+2];
_a = _s[_t+3];
++_t;
return _p(_bb8__23__23_base64_2d__3e_u8vector);
});

_j(_bb8__23__23_base64_2d__3e_u8vector = () => {
if (_c >= _s[_t-1]) {
return _bb9__23__23_base64_2d__3e_u8vector();
} else {
return _bb15__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb9__23__23_base64_2d__3e_u8vector = () => {
_a = _b;
_t -= 3;
return _p(_bb10__23__23_base64_2d__3e_u8vector);
});

_j(_bb15__23__23_base64_2d__3e_u8vector = () => {
_d = _make_interned_char(_s[_t-2].a[_c]);
_s[_t+1] = _r;
_s[_t+2] = _a;
_s[_t+3] = _b;
_s[_t+4] = _c;
_s[_t+5] = _d;
_c = _d;
_b = _a;
_a = _s[_t];
_r = _bb75__23__23_base64_2d__3e_u8vector;
_t += 5;
return _p(_bb21__23__23_base64_2d__3e_u8vector);
});

_j(_bb10__23__23_base64_2d__3e_u8vector = () => {
_b = _a[0];
_a = _a[1];
if (0 < _b) {
return _bb11__23__23_base64_2d__3e_u8vector();
} else {
return _bb12__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb21__23__23_base64_2d__3e_u8vector = () => {
if (_c.a >= 65) {
return _bb22__23__23_base64_2d__3e_u8vector();
} else {
return _bb23__23__23_base64_2d__3e_u8vector();
}
});

_k(_bb75__23__23_base64_2d__3e_u8vector = () => {
if (!(_a === !1)) {
return _bb76__23__23_base64_2d__3e_u8vector();
} else {
return _bb77__23__23_base64_2d__3e_u8vector();
}
},8,4);

_j(_bb11__23__23_base64_2d__3e_u8vector = () => {
if (_b <= 64) {
return _bb14__23__23_base64_2d__3e_u8vector();
} else {
return _bb12__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb12__23__23_base64_2d__3e_u8vector = () => {
_c = _b;
_b = 0;
return _p(_bb13__23__23_base64_2d__3e_u8vector);
});

_j(_bb22__23__23_base64_2d__3e_u8vector = () => {
if (_c.a <= 90) {
return _bb34__23__23_base64_2d__3e_u8vector();
} else {
return _bb23__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb23__23__23_base64_2d__3e_u8vector = () => {
if (_c.a >= 97) {
return _bb24__23__23_base64_2d__3e_u8vector();
} else {
return _bb25__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb76__23__23_base64_2d__3e_u8vector = () => {
_s[_t] = _s[_t-4];
_s[_t-4] = _s[_t-3];
_c = _s[_t-1] + 1;
_b = _a;
_a = _s[_t-2];
_r = _s[_t];
_t -= 4;
return _p(_bb19__23__23_base64_2d__3e_u8vector);
});

_j(_bb77__23__23_base64_2d__3e_u8vector = () => {
if (_s[_t].a === 61) {
return _bb78__23__23_base64_2d__3e_u8vector();
} else {
return _bb80__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb14__23__23_base64_2d__3e_u8vector = () => {
_a = _a.a;
_a = _a.a;
_a.a = _a.a.subarray(0,_b);
return _r;
});

_j(_bb13__23__23_base64_2d__3e_u8vector = () => {
_n = 3;
return _g["##fifo->u8vector"]();
});

_j(_bb34__23__23_base64_2d__3e_u8vector = () => {
_a = _c.a;
_a = _a - 65;
return _r;
});

_j(_bb24__23__23_base64_2d__3e_u8vector = () => {
if (_c.a <= 122) {
return _bb33__23__23_base64_2d__3e_u8vector();
} else {
return _bb25__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb25__23__23_base64_2d__3e_u8vector = () => {
if (_c.a >= 48) {
return _bb26__23__23_base64_2d__3e_u8vector();
} else {
return _bb27__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb19__23__23_base64_2d__3e_u8vector = () => {
if (_c >= _s[_t-2]) {
return _bb73__23__23_base64_2d__3e_u8vector();
} else {
return _bb20__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb78__23__23_base64_2d__3e_u8vector = () => {
_a = _cst33____base64;
_r = _s[_t-4];
return _p(_bb79__23__23_base64_2d__3e_u8vector);
});

_j(_bb80__23__23_base64_2d__3e_u8vector = () => {
_c = _s[_t-1] + 1;
_b = _s[_t-2];
_a = _s[_t-3];
_r = _s[_t-4];
_t -= 5;
return _p(_bb8__23__23_base64_2d__3e_u8vector);
});

_j(_bb33__23__23_base64_2d__3e_u8vector = () => {
_a = _c.a;
_a = _a - 97;
_a = 26 + _a;
return _r;
});

_j(_bb26__23__23_base64_2d__3e_u8vector = () => {
if (_c.a <= 57) {
return _bb32__23__23_base64_2d__3e_u8vector();
} else {
return _bb27__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb27__23__23_base64_2d__3e_u8vector = () => {
if (_c.a === _a.a) {
return _bb31__23__23_base64_2d__3e_u8vector();
} else {
return _bb28__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb73__23__23_base64_2d__3e_u8vector = () => {
_a = _cst33____base64;
return _p(_bb74__23__23_base64_2d__3e_u8vector);
});

_j(_bb20__23__23_base64_2d__3e_u8vector = () => {
_d = _make_interned_char(_s[_t-3].a[_c]);
_s[_t+1] = _r;
_s[_t+2] = _a;
_s[_t+3] = _b;
_s[_t+4] = _c;
_s[_t+5] = _d;
_c = _d;
_b = _s[_t];
_a = _s[_t-1];
_r = _bb16__23__23_base64_2d__3e_u8vector;
_t += 5;
return _p(_bb21__23__23_base64_2d__3e_u8vector);
});

_j(_bb79__23__23_base64_2d__3e_u8vector = () => {
_n = 1;
_t -= 8;
return _g["##error"]();
});

_j(_bb32__23__23_base64_2d__3e_u8vector = () => {
_a = _c.a;
_a = _a - 48;
_a = 52 + _a;
return _r;
});

_j(_bb31__23__23_base64_2d__3e_u8vector = () => {
_a = 62;
return _r;
});

_j(_bb28__23__23_base64_2d__3e_u8vector = () => {
if (_c.a === _b.a) {
return _bb29__23__23_base64_2d__3e_u8vector();
} else {
return _bb30__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb74__23__23_base64_2d__3e_u8vector = () => {
_n = 1;
_t -= 4;
return _g["##error"]();
});

_k(_bb16__23__23_base64_2d__3e_u8vector = () => {
if (!(_a === !1)) {
return _bb35__23__23_base64_2d__3e_u8vector();
} else {
return _bb17__23__23_base64_2d__3e_u8vector();
}
},9,5);

_j(_bb29__23__23_base64_2d__3e_u8vector = () => {
_a = 63;
return _r;
});

_j(_bb30__23__23_base64_2d__3e_u8vector = () => {
_a = !1;
return _r;
});

_j(_bb35__23__23_base64_2d__3e_u8vector = () => {
_s[_t] = _s[_t-4];
_s[_t-4] = _s[_t-3];
_c = _s[_t-1] + 1;
_b = _a;
_a = _s[_t-2];
_r = _s[_t];
_t -= 4;
return _p(_bb39__23__23_base64_2d__3e_u8vector);
});

_j(_bb17__23__23_base64_2d__3e_u8vector = () => {
if (_s[_t].a === 61) {
return _bb71__23__23_base64_2d__3e_u8vector();
} else {
return _bb18__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb39__23__23_base64_2d__3e_u8vector = () => {
if (_c >= _s[_t-3]) {
return _bb40__23__23_base64_2d__3e_u8vector();
} else {
return _bb42__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb71__23__23_base64_2d__3e_u8vector = () => {
_a = _cst33____base64;
_r = _s[_t-4];
return _p(_bb72__23__23_base64_2d__3e_u8vector);
});

_j(_bb18__23__23_base64_2d__3e_u8vector = () => {
_c = _s[_t-1] + 1;
_b = _s[_t-2];
_a = _s[_t-3];
_r = _s[_t-4];
_t -= 5;
return _p(_bb19__23__23_base64_2d__3e_u8vector);
});

_j(_bb40__23__23_base64_2d__3e_u8vector = () => {
_a = _cst33____base64;
return _p(_bb41__23__23_base64_2d__3e_u8vector);
});

_j(_bb42__23__23_base64_2d__3e_u8vector = () => {
_d = _make_interned_char(_s[_t-4].a[_c]);
_s[_t+1] = _r;
_s[_t+2] = _a;
_s[_t+3] = _b;
_s[_t+4] = _c;
_s[_t+5] = _d;
_c = _d;
_b = _s[_t-1];
_a = _s[_t-2];
_r = _bb36__23__23_base64_2d__3e_u8vector;
_t += 5;
return _p(_bb21__23__23_base64_2d__3e_u8vector);
});

_j(_bb72__23__23_base64_2d__3e_u8vector = () => {
_n = 1;
_t -= 9;
return _g["##error"]();
});

_j(_bb41__23__23_base64_2d__3e_u8vector = () => {
_n = 1;
_t -= 5;
return _g["##error"]();
});

_k(_bb36__23__23_base64_2d__3e_u8vector = () => {
if (!(_a === !1)) {
return _bb43__23__23_base64_2d__3e_u8vector();
} else {
return _bb37__23__23_base64_2d__3e_u8vector();
}
},10,6);

_j(_bb43__23__23_base64_2d__3e_u8vector = () => {
_s[_t] = _s[_t-4];
_s[_t-4] = _s[_t-3];
_c = _s[_t-1] + 1;
_b = _a;
_a = _s[_t-2];
_r = _s[_t];
_t -= 4;
return _p(_bb47__23__23_base64_2d__3e_u8vector);
});

_j(_bb37__23__23_base64_2d__3e_u8vector = () => {
if (_s[_t].a === 61) {
return _bb67__23__23_base64_2d__3e_u8vector();
} else {
return _bb38__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb47__23__23_base64_2d__3e_u8vector = () => {
if (_c >= _s[_t-4]) {
return _bb48__23__23_base64_2d__3e_u8vector();
} else {
return _bb50__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb67__23__23_base64_2d__3e_u8vector = () => {
_a = _s[_t-2] >> 4;
_b = _s[_t-3] << 2;
_a = _b + _a;
_b = _s[_t-5][0];
_c = _b + 1;
_s[_t-5][0] = _c;
_c = _s[_t-5][1];
_b = _b & 63;
if (_b === 0) {
return _bb68__23__23_base64_2d__3e_u8vector();
} else {
return _bb69__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb38__23__23_base64_2d__3e_u8vector = () => {
_c = _s[_t-1] + 1;
_b = _s[_t-2];
_a = _s[_t-3];
_r = _s[_t-4];
_t -= 5;
return _p(_bb39__23__23_base64_2d__3e_u8vector);
});

_j(_bb48__23__23_base64_2d__3e_u8vector = () => {
_a = _cst33____base64;
return _p(_bb49__23__23_base64_2d__3e_u8vector);
});

_j(_bb50__23__23_base64_2d__3e_u8vector = () => {
_d = _make_interned_char(_s[_t-5].a[_c]);
_s[_t+1] = _r;
_s[_t+2] = _a;
_s[_t+3] = _b;
_s[_t+4] = _c;
_s[_t+5] = _d;
_c = _d;
_b = _s[_t-2];
_a = _s[_t-3];
_r = _bb44__23__23_base64_2d__3e_u8vector;
_t += 5;
return _p(_bb21__23__23_base64_2d__3e_u8vector);
});

_j(_bb68__23__23_base64_2d__3e_u8vector = () => {
_d = _make_u8vector(64,0);
_r = _X(_d,null);
_s[_t-9] = _c.a;
_s[_t-9].b = _r;
_c.a = _r;
return _bb70__23__23_base64_2d__3e_u8vector();
});

_j(_bb69__23__23_base64_2d__3e_u8vector = () => {
_c = _c.a;
_c = _c.a;
_d = _c;
return _bb70__23__23_base64_2d__3e_u8vector();
});

_j(_bb49__23__23_base64_2d__3e_u8vector = () => {
_n = 1;
_t -= 6;
return _g["##error"]();
});

_k(_bb44__23__23_base64_2d__3e_u8vector = () => {
if (!(_a === !1)) {
return _bb51__23__23_base64_2d__3e_u8vector();
} else {
return _bb45__23__23_base64_2d__3e_u8vector();
}
},11,7);

_j(_bb70__23__23_base64_2d__3e_u8vector = () => {
_d.a[_b] = _a;
_a = _s[_t-5];
_r = _s[_t-4];
_t -= 10;
return _p(_bb10__23__23_base64_2d__3e_u8vector);
});

_j(_bb51__23__23_base64_2d__3e_u8vector = () => {
_s[_t] = _a;
_s[_t+1] = _s[_t-6];
_c = _s[_t-2];
_b = _s[_t-3];
_a = _s[_t-5];
_r = _bb63__23__23_base64_2d__3e_u8vector;
++_t;
return _bb53__23__23_base64_2d__3e_u8vector();
});

_j(_bb45__23__23_base64_2d__3e_u8vector = () => {
if (_s[_t].a === 61) {
return _bb52__23__23_base64_2d__3e_u8vector();
} else {
return _bb46__23__23_base64_2d__3e_u8vector();
}
});

_j(_bb53__23__23_base64_2d__3e_u8vector = () => {
_s[_t+1] = _r;
_s[_t+2] = _b;
_s[_t+3] = _c;
_b = _b >> 4;
_a = _a << 2;
_b = _a + _b;
_a = _s[_t];
_r = _bb58__23__23_base64_2d__3e_u8vector;
_t += 3;
return _p(_bb54__23__23_base64_2d__3e_u8vector);
});

_k(_bb63__23__23_base64_2d__3e_u8vector = () => {
_a = _s[_t-2] << 6;
_a = _a + _s[_t];
_a = 255 & _a;
_b = _s[_t-6][0];
_c = _b + 1;
_s[_t-6][0] = _c;
_c = _s[_t-6][1];
_b = _b & 63;
if (_b === 0) {
return _bb64__23__23_base64_2d__3e_u8vector();
} else {
return _bb65__23__23_base64_2d__3e_u8vector();
}
},11,7);

_j(_bb52__23__23_base64_2d__3e_u8vector = () => {
_s[_t-10] = _s[_t-3];
_s[_t-3] = _s[_t-6];
_c = _s[_t-2];
_b = _s[_t-10];
_a = _s[_t-5];
_r = _bb62__23__23_base64_2d__3e_u8vector;
_t -= 3;
return _bb53__23__23_base64_2d__3e_u8vector();
});

_j(_bb46__23__23_base64_2d__3e_u8vector = () => {
_c = _s[_t-1] + 1;
_b = _s[_t-2];
_a = _s[_t-3];
_r = _s[_t-4];
_t -= 5;
return _p(_bb47__23__23_base64_2d__3e_u8vector);
});

_j(_bb54__23__23_base64_2d__3e_u8vector = () => {
_c = _a[0];
_d = _c + 1;
_a[0] = _d;
_a = _a[1];
_c = _c & 63;
if (_c === 0) {
return _bb55__23__23_base64_2d__3e_u8vector();
} else {
return _bb57__23__23_base64_2d__3e_u8vector();
}
});

_k(_bb58__23__23_base64_2d__3e_u8vector = () => {
_a = _s[_t] >> 2;
_b = _s[_t-1] << 4;
_a = _b + _a;
_a = 255 & _a;
_b = _s[_t-3][0];
_c = _b + 1;
_s[_t-3][0] = _c;
_c = _s[_t-3][1];
_b = _b & 63;
if (_b === 0) {
return _bb59__23__23_base64_2d__3e_u8vector();
} else {
return _bb60__23__23_base64_2d__3e_u8vector();
}
},4,2);

_j(_bb64__23__23_base64_2d__3e_u8vector = () => {
_d = _make_u8vector(64,0);
_r = _X(_d,null);
_s[_t-5] = _c.a;
_s[_t-5].b = _r;
_c.a = _r;
return _bb66__23__23_base64_2d__3e_u8vector();
});

_j(_bb65__23__23_base64_2d__3e_u8vector = () => {
_c = _c.a;
_c = _c.a;
_d = _c;
return _bb66__23__23_base64_2d__3e_u8vector();
});

_k(_bb62__23__23_base64_2d__3e_u8vector = () => {
_a = _s[_t-2];
_r = _s[_t];
_t -= 7;
return _p(_bb10__23__23_base64_2d__3e_u8vector);
},7,7);

_j(_bb55__23__23_base64_2d__3e_u8vector = () => {
_d = _make_u8vector(64,0);
_s[_t+1] = _X(_d,null);
_s[_t+2] = _a.a;
_s[_t+2].b = _s[_t+1];
_a.a = _s[_t+1];
return _bb56__23__23_base64_2d__3e_u8vector();
});

_j(_bb57__23__23_base64_2d__3e_u8vector = () => {
_a = _a.a;
_a = _a.a;
_d = _a;
return _bb56__23__23_base64_2d__3e_u8vector();
});

_j(_bb59__23__23_base64_2d__3e_u8vector = () => {
_d = _make_u8vector(64,0);
_r = _X(_d,null);
_s[_t-3] = _c.a;
_s[_t-3].b = _r;
_c.a = _r;
return _bb61__23__23_base64_2d__3e_u8vector();
});

_j(_bb60__23__23_base64_2d__3e_u8vector = () => {
_c = _c.a;
_c = _c.a;
_d = _c;
return _bb61__23__23_base64_2d__3e_u8vector();
});

_j(_bb66__23__23_base64_2d__3e_u8vector = () => {
_d.a[_b] = _a;
_c = _s[_t-1] + 1;
_b = _s[_t-6];
_a = _s[_t-7];
_r = _s[_t-4];
_t -= 8;
return _p(_bb8__23__23_base64_2d__3e_u8vector);
});

_j(_bb56__23__23_base64_2d__3e_u8vector = () => {
_d.a[_c] = _b;
_a = _d;
return _r;
});

_j(_bb61__23__23_base64_2d__3e_u8vector = () => {
_d.a[_b] = _a;
_a = _d;
_t -= 4;
return _s[_t+2]();
});



_m(_bb1_base64_2d__3e_u8vector = () => {
if (_n === 1) {
_s[++_t] = _a;
_s[++_t] = _absent_obj;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 2) {
_s[++_t] = _a;
_s[++_t] = _b;
_a = _absent_obj;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 3) {
_s[++_t] = _a;
_s[++_t] = _b;
_a = _c;
_b = _absent_obj;
_c = _absent_obj;
} else {
if (_n === 4) {
_s[++_t] = _a;
_a = _b;
_b = _c;
_c = _absent_obj;
} else {
if (_n !== 5) {
return _w(_bb1_base64_2d__3e_u8vector);
}
}
}
}
}
if (_stringp(_s[_t-1])) {
return _bb2_base64_2d__3e_u8vector();
} else {
return _bb32_base64_2d__3e_u8vector();
}
},-1,_i("base64->u8vector"),!1,!0);

_j(_bb2_base64_2d__3e_u8vector = () => {
if (_s[_t] === _absent_obj) {
return _bb3_base64_2d__3e_u8vector();
} else {
return _bb4_base64_2d__3e_u8vector();
}
});

_j(_bb32_base64_2d__3e_u8vector = () => {
_s[_t+1] = _s[_t-1];
_s[_t-1] = _cst36____base64;
_s[_t+2] = _s[_t];
_s[_t] = _bb1_base64_2d__3e_u8vector;
_t += 2;
return _p(_bb33_base64_2d__3e_u8vector);
});

_j(_bb3_base64_2d__3e_u8vector = () => {
_d = 0;
if (_y(_d)) {
return _bb5_base64_2d__3e_u8vector();
} else {
return _bb27_base64_2d__3e_u8vector();
}
});

_j(_bb4_base64_2d__3e_u8vector = () => {
_d = _s[_t];
if (_y(_d)) {
return _bb5_base64_2d__3e_u8vector();
} else {
return _bb27_base64_2d__3e_u8vector();
}
});

_j(_bb33_base64_2d__3e_u8vector = () => {
_n = 7;
return _g["##fail-check-string"]();
});

_j(_bb5_base64_2d__3e_u8vector = () => {
_s[_t+1] = _s[_t-1].a.length;
if ((0 <= _d) && _d <= _s[_t+1]) {
++_t;
return _bb6_base64_2d__3e_u8vector();
} else {
++_t;
return _bb26_base64_2d__3e_u8vector();
}
});

_j(_bb27_base64_2d__3e_u8vector = () => {
if (_d instanceof _Bignum) {
return _bb28_base64_2d__3e_u8vector();
} else {
return _bb30_base64_2d__3e_u8vector();
}
});

_j(_bb6_base64_2d__3e_u8vector = () => {
if (_a === _absent_obj) {
return _bb7_base64_2d__3e_u8vector();
} else {
return _bb20_base64_2d__3e_u8vector();
}
});

_j(_bb26_base64_2d__3e_u8vector = () => {
_s[_t] = _s[_t-2];
_s[_t-2] = _cst39____base64;
_s[_t+1] = _s[_t-1];
_s[_t-1] = _bb1_base64_2d__3e_u8vector;
++_t;
return _p(_bb29_base64_2d__3e_u8vector);
});

_j(_bb28_base64_2d__3e_u8vector = () => {
_s[_t+1] = _s[_t-1];
_s[_t-1] = _cst40____base64;
_s[_t+2] = _s[_t];
_s[_t] = _bb1_base64_2d__3e_u8vector;
_t += 2;
return _p(_bb29_base64_2d__3e_u8vector);
});

_j(_bb30_base64_2d__3e_u8vector = () => {
_s[_t+1] = _s[_t-1];
_s[_t-1] = _cst41____base64;
_s[_t+2] = _s[_t];
_s[_t] = _bb1_base64_2d__3e_u8vector;
_t += 2;
return _p(_bb31_base64_2d__3e_u8vector);
});

_j(_bb7_base64_2d__3e_u8vector = () => {
_s[_t] = _s[_t-2].a.length;
_s[_t+1] = _a;
_a = _s[_t];
_s[_t] = _s[_t+1];
if (_y(_a)) {
return _bb8_base64_2d__3e_u8vector();
} else {
return _bb21_base64_2d__3e_u8vector();
}
});

_j(_bb20_base64_2d__3e_u8vector = () => {
_s[_t] = _a;
if (_y(_a)) {
return _bb8_base64_2d__3e_u8vector();
} else {
return _bb21_base64_2d__3e_u8vector();
}
});

_j(_bb29_base64_2d__3e_u8vector = () => {
_n = 7;
return _g["##raise-range-exception"]();
});

_j(_bb31_base64_2d__3e_u8vector = () => {
_n = 7;
return _g["##fail-check-exact-integer"]();
});

_j(_bb8_base64_2d__3e_u8vector = () => {
_s[_t+1] = _s[_t-2].a.length;
if ((_d <= _a) && _a <= _s[_t+1]) {
++_t;
return _bb9_base64_2d__3e_u8vector();
} else {
++_t;
return _bb19_base64_2d__3e_u8vector();
}
});

_j(_bb21_base64_2d__3e_u8vector = () => {
if (_a instanceof _Bignum) {
return _bb22_base64_2d__3e_u8vector();
} else {
return _bb24_base64_2d__3e_u8vector();
}
});

_j(_bb9_base64_2d__3e_u8vector = () => {
if (_b === _absent_obj) {
return _bb10_base64_2d__3e_u8vector();
} else {
return _bb17_base64_2d__3e_u8vector();
}
});

_j(_bb19_base64_2d__3e_u8vector = () => {
_s[_t] = _s[_t-3];
_s[_t-3] = _cst42____base64;
_s[_t+1] = _s[_t-2];
_s[_t-2] = _bb1_base64_2d__3e_u8vector;
_s[_t+2] = _s[_t-1];
_s[_t-1] = _s[_t];
_s[_t] = _s[_t+1];
_a = _s[_t+2];
_t += 2;
return _p(_bb23_base64_2d__3e_u8vector);
});

_j(_bb22_base64_2d__3e_u8vector = () => {
_s[_t+1] = _s[_t-2];
_s[_t-2] = _cst43____base64;
_s[_t+2] = _s[_t-1];
_s[_t-1] = _bb1_base64_2d__3e_u8vector;
_s[_t+3] = _s[_t];
_s[_t] = _s[_t+1];
_s[_t+1] = _s[_t+2];
_a = _s[_t+3];
_t += 3;
return _p(_bb23_base64_2d__3e_u8vector);
});

_j(_bb24_base64_2d__3e_u8vector = () => {
_s[_t+1] = _s[_t-2];
_s[_t-2] = _cst44____base64;
_s[_t+2] = _s[_t-1];
_s[_t-1] = _bb1_base64_2d__3e_u8vector;
_s[_t+3] = _s[_t];
_s[_t] = _s[_t+1];
_s[_t+1] = _s[_t+2];
_a = _s[_t+3];
_t += 3;
return _p(_bb25_base64_2d__3e_u8vector);
});

_j(_bb10_base64_2d__3e_u8vector = () => {
_s[_t] = _a;
_a = _cst0____base64;
if (_a instanceof _Char) {
return _bb11_base64_2d__3e_u8vector();
} else {
return _bb18_base64_2d__3e_u8vector();
}
});

_j(_bb17_base64_2d__3e_u8vector = () => {
_s[_t] = _a;
_a = _b;
if (_a instanceof _Char) {
return _bb11_base64_2d__3e_u8vector();
} else {
return _bb18_base64_2d__3e_u8vector();
}
});

_j(_bb23_base64_2d__3e_u8vector = () => {
_n = 7;
_t -= 2;
return _g["##raise-range-exception"]();
});

_j(_bb25_base64_2d__3e_u8vector = () => {
_n = 7;
_t -= 2;
return _g["##fail-check-exact-integer"]();
});

_j(_bb11_base64_2d__3e_u8vector = () => {
if (_c === _absent_obj) {
return _bb12_base64_2d__3e_u8vector();
} else {
return _bb15_base64_2d__3e_u8vector();
}
});

_j(_bb18_base64_2d__3e_u8vector = () => {
_s[_t] = _s[_t-3];
_s[_t-3] = _cst45____base64;
_s[_t+1] = _s[_t-2];
_s[_t-2] = _bb1_base64_2d__3e_u8vector;
_s[_t+2] = _s[_t-1];
_s[_t-1] = _s[_t];
_s[_t] = _s[_t+1];
_a = _s[_t+2];
_t += 2;
return _p(_bb14_base64_2d__3e_u8vector);
});

_j(_bb12_base64_2d__3e_u8vector = () => {
_s[_t+1] = _a;
_a = _cst1____base64;
if (_a instanceof _Char) {
++_t;
return _bb16_base64_2d__3e_u8vector();
} else {
++_t;
return _bb13_base64_2d__3e_u8vector();
}
});

_j(_bb15_base64_2d__3e_u8vector = () => {
_s[_t+1] = _a;
_a = _c;
if (_a instanceof _Char) {
++_t;
return _bb16_base64_2d__3e_u8vector();
} else {
++_t;
return _bb13_base64_2d__3e_u8vector();
}
});

_j(_bb14_base64_2d__3e_u8vector = () => {
_n = 7;
_t -= 2;
return _g["##fail-check-char"]();
});

_j(_bb16_base64_2d__3e_u8vector = () => {
_s[_t-3] = _d;
_c = _a;
_b = _s[_t];
_a = _s[_t-1];
_n = 5;
_t -= 3;
return _p(_bb1__23__23_base64_2d__3e_u8vector);
});

_j(_bb13_base64_2d__3e_u8vector = () => {
_s[_t-1] = _s[_t-4];
_s[_t-4] = _cst46____base64;
_s[_t] = _s[_t-3];
_s[_t-3] = _bb1_base64_2d__3e_u8vector;
_s[_t+1] = _s[_t-2];
_s[_t-2] = _s[_t-1];
_s[_t-1] = _s[_t];
_a = _s[_t+1];
++_t;
return _p(_bb14_base64_2d__3e_u8vector);
});



_module_register([[_i("_base64")],[],null,1,_bb1___base64_23_,!1]);

